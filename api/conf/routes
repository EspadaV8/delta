# Generated by apidoc - http://www.apidoc.me
# Service version: 0.0.2
# apidoc:0.11.7 http://www.apidoc.me/flow/delta/0.0.2/play_2_x_routes

#GET        /projects/:projectId/deployments         controllers.Deployments.get(projectId: String, id: _root_.scala.Option[String], ids: _root_.scala.Option[List[String]], limit: Long ?= 25, offset: Long ?= 0)
#GET        /projects/:projectId/deployments/:id     controllers.Deployments.getById(projectId: String, id: String)
#GET        /projects/:projectId/images              controllers.Images.get(projectId: String, id: _root_.scala.Option[String], ids: _root_.scala.Option[List[String]], limit: Long ?= 25, offset: Long ?= 0)
GET        /_internal_/healthcheck                  controllers.Healthchecks.getHealthcheck()
#GET        /projects/versions                       controllers.Projects.getVersions(id: _root_.scala.Option[String], ids: _root_.scala.Option[List[String]], organization: _root_.scala.Option[String], limit: Long ?= 25, offset: Long ?= 0)
#GET        /projects                                controllers.Projects.get(id: _root_.scala.Option[String], ids: _root_.scala.Option[List[String]], organization: _root_.scala.Option[String], limit: Long ?= 25, offset: Long ?= 0)
#GET        /projects/:id                            controllers.Projects.getById(id: String)
#POST       /projects                                controllers.Projects.post()
#DELETE     /projects/:id                            controllers.Projects.deleteById(id: String)
#GET        /projects/:projectId/tags                controllers.Tags.get(projectId: String, id: _root_.scala.Option[String], ids: _root_.scala.Option[List[String]], limit: Long ?= 25, offset: Long ?= 0)
